<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>低配 Win10 部署 PyTorch-GPU 环境（Win10+mx150+CUDA10.2）</title>
    <link href="/2020/10/29/%E4%BD%8E%E9%85%8D-Win10-%E9%83%A8%E7%BD%B2-PyTorch-GPU-%E7%8E%AF%E5%A2%83%EF%BC%88Win10-mx150-CUDA10-2%EF%BC%89/"/>
    <url>/2020/10/29/%E4%BD%8E%E9%85%8D-Win10-%E9%83%A8%E7%BD%B2-PyTorch-GPU-%E7%8E%AF%E5%A2%83%EF%BC%88Win10-mx150-CUDA10-2%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="低配-win10-部署-pytorch-gpu-环境win10mx150cuda102"><a class="markdownIt-Anchor" href="#低配-win10-部署-pytorch-gpu-环境win10mx150cuda102"></a> 低配 Win10 部署 PyTorch-GPU 环境（Win10+mx150+CUDA10.2）</h1><h2 id="0x00-写在前面"><a class="markdownIt-Anchor" href="#0x00-写在前面"></a> 0x00 写在前面</h2><p>本文可能不适用于所有人，只是作为我自己的一次记录，完文时间是2020.7.14，一直存在本地没找时间发布，时隔4月直至今天才发。文章大致分为四部分：我的配置、安装 CUDA 、安装 cuDNN 和安装 PyTorch ，只希望读者读完之后能省时间，少踩坑，愿君有所获。</p><h3 id="我的配置清单"><a class="markdownIt-Anchor" href="#我的配置清单"></a> 我的配置清单</h3><p>笔电型号配置: 小米Pro（2018版8G+256G原配固态+256G自加固态）</p><p>OS: Win10 Pro Education 64-bit（家庭版应该也差不多）</p><p>GPU: GeForce MX150</p><p>使用Anaconda进行python包管理</p><p>提前装好 Visual Studio 2015或以上版本（community即可）</p><h3 id="探探情况"><a class="markdownIt-Anchor" href="#探探情况"></a> 探探情况</h3><p>先去<a href="https://pytorch.org/">PyTorch官网</a>看看最新稳定版支持什么</p><p><img src="https://i.loli.net/2020/10/29/aBqGKeASiwyFsgm.png" srcset="/img/loading.gif" alt="image-20200714175513350" /></p><p>可以看到它支持Windows系统，且当你用conda来管理python包时，使用GPU训练CUDA可选的版本是9.2、10.1、10.2</p><p>如果使用CPU训练那么可以选择none，不使用CUDA加速。</p><p>虽然MX150真的很辣鸡，但我这里选择的版本依然还是GPU版。</p><p>下面是详细步骤，按我步骤来包你1h搞定（此处使用了夸张的修辞手法）。</p><h2 id="0x01-安装cuda"><a class="markdownIt-Anchor" href="#0x01-安装cuda"></a> 0x01 安装CUDA</h2><h3 id="查看支持的cuda版本"><a class="markdownIt-Anchor" href="#查看支持的cuda版本"></a> 查看支持的CUDA版本</h3><p>更新好驱动后就查看你的驱动所支持的CUDA版本</p><p>打开NVIDIA控制面板-&gt;帮助-&gt;系统信息-&gt;组件</p><p>查看支持版本。</p><p><img src="https://i.loli.net/2020/10/29/kED43Qu6Aor7Gwe.png" srcset="/img/loading.gif" alt="image-20200714173403609" /></p><p>如果发现版本不够高的话可以选择其他版本，如CUDA10.1，大致的流程也是类似的。</p><p>或者可以选择更新驱动到最新版本，我这里驱动更新到最新版时对应的CUDA版本恰好为10.2。</p><h3 id="更新驱动"><a class="markdownIt-Anchor" href="#更新驱动"></a> 更新驱动</h3><p>将显卡驱动升级到最新版本（我的驱动程序版本是442.50）</p><p>可以去NVIDIA官网下载更新，也可以用驱动精灵检测更新。之前装tensorflow时找配适的驱动在官网装感觉有点麻烦，所以这次我直接用驱动精灵装，一路按提示安装就行了，感觉比较省事。（驱动精灵用完就可以卸载了，就一工具软件。）</p><h3 id="下载对应版本的cuda"><a class="markdownIt-Anchor" href="#下载对应版本的cuda"></a> 下载对应版本的CUDA</h3><p>到官网下载<a href="https://developer.nvidia.com/cuda-10.2-download-archive?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exelocal">CUDA10.2</a></p><p>随便点一个都可以下载，这里建议选择下载到local，使用第三方下载器估计会比较快。</p><p>对Windows用户来说，大多数深度学习框架底层是基于C/C++开发的，需要提前装好 Visual Studio 2015或以上版本。</p><p>下载好后点击exe文件，也是一路按提示安装就完事儿。</p><h3 id="安装验证"><a class="markdownIt-Anchor" href="#安装验证"></a> 安装验证</h3><p>在命令行输入</p><pre><code class="hljs bash">nvcc -V</code></pre><p>如果输出结果如下图所示返回CUDA版本号10.2，说明安装成功。</p><p><img src="https://i.loli.net/2020/10/29/QRiVTaUMdlztBZ2.png" srcset="/img/loading.gif" alt="image-20200714182810649" /></p><h2 id="0x02-安装cudnn"><a class="markdownIt-Anchor" href="#0x02-安装cudnn"></a> 0x02 安装cuDNN</h2><h3 id="下载安装"><a class="markdownIt-Anchor" href="#下载安装"></a> 下载安装</h3><p>进入<a href="https://developer.nvidia.com/rdp/cudnn-download">官网</a>登录后下载cuDNN v7.6.5 for CUDA 10.2</p><p><img src="https://i.loli.net/2020/10/29/kg4r7UwMzmCxBHi.png" srcset="/img/loading.gif" alt="image-20200714183949020" /></p><p>这一步选择对应的CUDA版本即可，我选择<a href="https://developer.nvidia.com/compute/machine-learning/cudnn/secure/7.6.5.32/Production/10.2_20191118/cudnn-10.2-windows10-x64-v7.6.5.32.zip">cuDNN Library for Windows 10</a>，下载后得到一个zip压缩包，里面包含了bin、include、lib三个文件夹，解压，把各个文件夹里的文件放到 C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA下同名的文件夹，配置好环境变量即可。</p><p>如果前面没有自定义安装路径，按照默认则需要添加下面两个路径：</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\lib\x64</p><h3 id="安装验证-2"><a class="markdownIt-Anchor" href="#安装验证-2"></a> 安装验证</h3><p>在路径C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\extras\demo_suite下打开命令行输入</p><pre><code class="hljs bash">./bandwidthtest.exe</code></pre><p>得到下图的结果说明安装成功</p><p><img src="https://i.loli.net/2020/10/29/4gzvjbdTrQwOhYe.png" srcset="/img/loading.gif" alt="image-20200714205713708" /></p><p>此外，还可以添加<code>C:\Program Files\NVIDIA Corporation\NVSMI\</code>到系统变量中，查看显卡使用情况时就可以直接在命令行输入</p><pre><code class="hljs bash">nvidia-smi</code></pre><p>得到显卡使用情况</p><p><img src="https://i.loli.net/2020/10/29/zuE1DINkqAVmBs5.png" srcset="/img/loading.gif" alt="image-20200714214650508" /></p><h2 id="0x03-安装pytorch"><a class="markdownIt-Anchor" href="#0x03-安装pytorch"></a> 0x03 安装PyTorch</h2><h3 id="anaconda换源"><a class="markdownIt-Anchor" href="#anaconda换源"></a> Anaconda换源</h3><p>如果不换源会下载龟速以至于不能实现1h内搞定这个教程，这里我用了清华的源。</p><p>打开Anaconda Prompt</p><p>先创建一个命名为pytorch_gpu的python版本为3.6的环境</p><pre><code class="hljs bash">conda create -n pytorch_gpu pip python=3.6</code></pre><p>激活pytorch_gpu环境</p><pre><code class="hljs bash">conda activate pytorch_gpu</code></pre><p>查看Anaconda配置</p><pre><code class="hljs bash">conda config --show</code></pre><p>添加清华源</p><pre><code class="hljs bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</code></pre><p>设置搜索时显示通道地址</p><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> show_channel_urls yes</code></pre><p>然后在PyTorch官网那里复制conda的命令</p><pre><code class="hljs bash">conda install pytorch torchvision cudatoolkit=10.2 -c pytorch</code></pre><p>把其中的 -c pytorch去掉</p><p>在命令行中输入</p><pre><code class="hljs bash">conda install pytorch torchvision cudatoolkit=10.2</code></pre><p>上面所有步骤中需要下载的话输入y回车就好。</p><p>等待下载完成。</p><h3 id="pytorch安装验证"><a class="markdownIt-Anchor" href="#pytorch安装验证"></a> PyTorch安装验证</h3><p>运行简单的样例代码测试，例如打印出随机生成的张量矩阵，以及gpu是否可以使用。</p><p>首先在命令行输入python，进入python的解释器，依次输入以下命令，每输入一句回车</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> torchx = torch.rand(<span class="hljs-number">5</span>,<span class="hljs-number">3</span>)print(x)torch.cuda.is_available()</code></pre><p>运行内容类似于以下则说明PyTorch安装成功且支持GPU计算：</p><pre><code class="hljs bash">&gt;&gt;&gt; import torch&gt;&gt;&gt; x = torch.rand(5,3)&gt;&gt;&gt; <span class="hljs-built_in">print</span>(x)tensor([[0.9752, 0.3114, 0.4016],        [0.9716, 0.3168, 0.8434],        [0.5170, 0.6517, 0.4141],        [0.5586, 0.6290, 0.4637],        [0.8503, 0.0334, 0.4124]])&gt;&gt;&gt; torch.cuda.is_available()True</code></pre><h2 id="0x04-致谢"><a class="markdownIt-Anchor" href="#0x04-致谢"></a> 0x04 致谢</h2><p>感谢前人留下的足迹，这篇文章才能顺利走到这里，接下来开始你的炼丹之旅吧~</p><p><a href="https://zhuanlan.zhihu.com/p/131595687">win10+mx150环境下安装cuda，cudnn，pytorch-gpu</a></p><p><a href="https://zhuanlan.zhihu.com/p/54350088">windows10下安装GPU版pytorch简明教程</a></p><p><a href="https://zhuanlan.zhihu.com/p/94220564">win10安装CUDA和cuDNN的正确姿势</a></p><p><a href="https://blog.csdn.net/xo3ylAF9kGs/article/details/104104041">pytorch慢到无法安装，该怎么办？</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>PyTorch 深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/20/hello-world/"/>
    <url>/2020/10/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
